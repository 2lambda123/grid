# This action runs every day at 6 AM and on every push
# If the branch it's running on is main then it will run snyk monitor (reports vulnerabilities to snyk.io)
# Otherwise it will run snyk test
name: Snyk

on:
  schedule:
    - cron: "0 6 * * *"
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  snyk-monitor:
    runs-on: ubuntu-latest
    env:
      SNYK_COMMAND: monitor
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Run Snyk to monitor for Node vulnerabilities in image-counter-lambda
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/image-counter-lambda --file=./image-counter-lambda/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in reaper
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/reaper --file=./reaper/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in s3watcher lambda
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/s3watcher-lambda --file=./s3watcher/lambda/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in s3watcher scripts
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/s3watcher-scripts --file=./s3watcher/scripts/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in kahuna
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/kahuna --file=./kahuna/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in inadvisable-metadata-backup script
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/inadvisable-metadata-backup-script --file=./scripts/inadvisable-metadata-backup/yarn.lock
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in reindex-images script
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/reindex-images-script --file=./scripts/reindex-images/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in sample-images script
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/sample-images/script --file=./scripts/sample-images/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor for Node vulnerabilities in generate-config dev script
        uses: snyk/actions/node@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/generate-config-script --file=./dev/script/generate-config/package-lock.json
          command: ${{ env.SNYK_COMMAND }}

      - name: Run Snyk to monitor Scala vulnerabilities at root level
        uses: snyk/actions/scala@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=guardian --project-name=${{ github.repository }}/root --file=./build.sbt
          command: ${{ env.SNYK_COMMAND }}
